name: Build Multiarch Container

on:
  workflow_call:
    inputs:
      ghcr_image:
        required: true
        type: string
      model:
        required: true
        type: string
      os:
        required: true
        type: string

permissions:
  packages: write
  contents: write
  id-token: write
  attestations: write

jobs:
  build_container:
    name: Build and Push Container (${{ inputs.model }}, ${{ inputs.os }})
    runs-on: ${{ inputs.os }}
    env:
      GHCR_IMAGE: ${{ inputs.ghcr_image }}
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set metadata for model ${{ inputs.model }}
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GHCR_IMAGE }}
          labels: |
            org.opencontainers.image.architecture=${{ inputs.os == 'ubuntu-latest' && 'amd64' || 'arm64' }}

      - name: Build and push container for model ${{ inputs.model }}
        uses: docker/build-push-action@v6
        id: build
        with:
          file: Containerfile
          platforms: linux/${{ inputs.os == 'ubuntu-latest' && 'amd64' || 'arm64' }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: true
          build-args: |
            BUILDKIT_CONTEXT_KEEP_GIT_DIR=true
            MODEL=${{ inputs.model }}
          cache-from: type=registry,ref=${{ env.GHCR_IMAGE }}-cache-${{ inputs.os == 'ubuntu-latest' && 'amd64' || 'arm64' }}:${{ inputs.model }}
          cache-to: type=registry,ref=${{ env.GHCR_IMAGE }}-cache-${{ inputs.os == 'ubuntu-latest' && 'amd64' || 'arm64' }}:${{ inputs.model }},mode=max
          outputs: |
            type=image,"name=${{ env.GHCR_IMAGE }}",push-by-digest=true,name-canonical=true,push=true,compression=zstd

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ inputs.os }}-${{ inputs.model }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1
